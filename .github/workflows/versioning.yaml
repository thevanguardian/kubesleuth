name: Version and Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  version-and-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get current version
        id: current_version
        run: echo "::set-output name=current::$(git describe --tags --abbrev=0)"

      - name: Determine new version
        id: new_version
        run: |
          LABELS=$(jq -r '.pull_request.labels | map(.name) | join(",")' <<< "${{ github.event }}")
          echo "Labels: $LABELS"
          CURRENT_VERSION="${{ steps.current_version.outputs.current }}"
          echo "Current version: $CURRENT_VERSION"

          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          if [[ "$LABELS" == *"major"* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$LABELS" == *"minor"* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ "$LABELS" == *"patch"* ]]; then
            PATCH=$((PATCH + 1))
          else
            echo "No version label found. Exiting."
            exit 1
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "::set-output name=version::$NEW_VERSION"

      - name: Create new tag
        run: |
          NEW_VERSION="${{ steps.new_version.outputs.version }}"
          git tag -a "$NEW_VERSION" -m "Release $NEW_VERSION"
          git push origin "$NEW_VERSION"

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.new_version.outputs.version }}
          release_name: Release ${{ steps.new_version.outputs.version }}
          body: |
            Release ${{ steps.new_version.outputs.version }} created.
          draft: false
          prerelease: false
